{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/namalpathirana/Documents/React/ReConsider/section23_nextjs/nextjs_PracProject_two/pages/[meetupId]/index.js\",\n    _this = this;\n\nimport { Fragment } from \"react\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport Head from \"next/head\";\n\nvar MeetupDetails = function MeetupDetails(props) {\n  var data = props.meetupData;\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: data.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: description,\n        content: data.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      img: data.image,\n      title: data.title,\n      address: data.address,\n      description: data.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["/Users/namalpathirana/Documents/React/ReConsider/section23_nextjs/nextjs_PracProject_two/pages/[meetupId]/index.js"],"names":["Fragment","MeetupDetail","Head","MeetupDetails","props","data","meetupData","console","log","title","description","image","address"],"mappings":";;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AAEA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC/B,MAAMC,IAAI,GAAGD,KAAK,CAACE,UAAnB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE;AAAA,kBAAQA,IAAI,CAACI;AAAb;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AAAM,QAAA,IAAI,EAAEC,WAAZ;AAAyB,QAAA,OAAO,EAAEL,IAAI,CAACK;AAAvC;AAAA;AAAA;AAAA;AAAA,eAFF;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAKE,QAAC,YAAD;AACE,MAAA,GAAG,EAAEL,IAAI,CAACM,KADZ;AAEE,MAAA,KAAK,EAAEN,IAAI,CAACI,KAFd;AAGE,MAAA,OAAO,EAAEJ,IAAI,CAACO,OAHhB;AAIE,MAAA,WAAW,EAAEP,IAAI,CAACK;AAJpB;AAAA;AAAA;AAAA;AAAA,aALF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAcD,CAjBD;;KAAMP,a;;AAmFN,eAAeA,aAAf","sourcesContent":["import { Fragment } from \"react\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport Head from \"next/head\";\n\nconst MeetupDetails = (props) => {\n  const data = props.meetupData;\n  console.log(data);\n  return (\n    <Fragment>\n      <Head>\n        <title>{data.title}</title>\n        <meta name={description} content={data.description}></meta>\n      </Head>\n      <MeetupDetail\n        img={data.image}\n        title={data.title}\n        address={data.address}\n        description={data.description}\n      ></MeetupDetail>\n    </Fragment>\n  );\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\n    \"mongodb+srv://nextjs_deme:loop6@cluster0.wpwjb.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n\n  const db = client.db();\n\n  const meetupsCollection = db.collection(\"meetups\");\n\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\n\n  client.close();\n\n  return {\n    fallback: false,\n    paths: meetups.map((meetup) => {\n      return { params: { meetupId: meetup._id.toString() } };\n    }),\n  };\n}\n\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n\n  console.log(meetupId);\n\n  const client = await MongoClient.connect(\n    \"mongodb+srv://nextjs_deme:loop6@cluster0.wpwjb.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n\n  const db = client.db();\n\n  const meetupsCollection = db.collection(\"meetups\");\n\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId),\n  });\n\n  // (error,results)=>{\n  //   if(error){\n  //    console.log(error);\n  //   }\n  //   else{\n  //     console.log(\"no error\");\n  //     console.log(results);\n  //   }\n  //  }\n\n  // const jsonStr = JSON.parse(selectedMeetup);\n  console.log(selectedMeetup);\n\n  return {\n    props: {\n      meetupData: {\n        title: selectedMeetup.title,\n        description: selectedMeetup.description,\n        image: selectedMeetup.image,\n        address: selectedMeetup.address,\n        id: selectedMeetup._id.toString(),\n      },\n    },\n  };\n}\n\nexport default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}