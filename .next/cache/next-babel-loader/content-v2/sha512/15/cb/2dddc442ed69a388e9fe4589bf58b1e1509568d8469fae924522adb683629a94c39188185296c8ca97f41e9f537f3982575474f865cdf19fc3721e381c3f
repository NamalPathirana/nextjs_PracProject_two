{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/namalpathirana/Documents/React/ReConsider/section23_nextjs/nextjs_PracProject_two/pages/[meetupId]/index.js\";\nimport { Fragment } from \"react\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { MongoClient } from \"mongodb\";\n\nconst MeetupDetails = props => {\n  const data = props.meetupData;\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    img: data.img,\n    title: data.title,\n    address: data.address,\n    description: data.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://nextjs_deme:loop6@cluster0.wpwjb.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => {\n      return {\n        params: {\n          meetupId: \"meetup._id.toString()\"\n        }\n      };\n    })\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  console.log(meetupId);\n  return {\n    props: {\n      meetupData: {\n        img: \"https://upload.wikimedia.org/wikipedia/commons/thumb/a/a3/Canal_Grande_Chiesa_della_Salute_e_Dogana_dal_ponte_dell_Accademia.jpg/2560px-Canal_Grande_Chiesa_della_Salute_e_Dogana_dal_ponte_dell_Accademia.jpg\",\n        id: meetupId,\n        title: \"A first meetup\",\n        address: \"Some street5, 1213 some city\",\n        description: \"The meetup description\"\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["/Users/namalpathirana/Documents/React/ReConsider/section23_nextjs/nextjs_PracProject_two/pages/[meetupId]/index.js"],"names":["Fragment","MeetupDetail","MongoClient","MeetupDetails","props","data","meetupData","img","title","address","description","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","fallback","paths","map","meetup","params","meetupId","getStaticProps","context","console","log","id"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,SAASC,WAAT,QAA4B,SAA5B;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/B,QAAMC,IAAI,GAAGD,KAAK,CAACE,UAAnB;AACA,sBACE,QAAC,YAAD;AACE,IAAA,GAAG,EAAED,IAAI,CAACE,GADZ;AAEE,IAAA,KAAK,EAAEF,IAAI,CAACG,KAFd;AAGE,IAAA,OAAO,EAAEH,IAAI,CAACI,OAHhB;AAIE,IAAA,WAAW,EAAEJ,IAAI,CAACK;AAJpB;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAVD;;AAYA,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMV,WAAW,CAACW,OAAZ,CACnB,gGADmB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AAEA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEL,OAAO,CAACM,GAAR,CAAaC,MAAD,IAAY;AAC7B,aAAO;AAAEC,QAAAA,MAAM,EAAE;AAAEC,UAAAA,QAAQ,EAAE;AAAZ;AAAV,OAAP;AACD,KAFM;AAFF,GAAP;AAMD;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAMF,QAAQ,GAAGE,OAAO,CAACH,MAAR,CAAeC,QAAhC;AAEAG,EAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AAEA,SAAO;AACLtB,IAAAA,KAAK,EAAE;AACLE,MAAAA,UAAU,EAAE;AACVC,QAAAA,GAAG,EAAE,gNADK;AAEVwB,QAAAA,EAAE,EAAEL,QAFM;AAGVlB,QAAAA,KAAK,EAAE,gBAHG;AAIVC,QAAAA,OAAO,EAAE,8BAJC;AAKVC,QAAAA,WAAW,EAAE;AALH;AADP;AADF,GAAP;AAWD;AAED,eAAeP,aAAf","sourcesContent":["import { Fragment } from \"react\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { MongoClient } from \"mongodb\";\n\nconst MeetupDetails = (props) => {\n  const data = props.meetupData;\n  return (\n    <MeetupDetail\n      img={data.img}\n      title={data.title}\n      address={data.address}\n      description={data.description}\n    ></MeetupDetail>\n  );\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\n    \"mongodb+srv://nextjs_deme:loop6@cluster0.wpwjb.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n\n  const db = client.db();\n\n  const meetupsCollection = db.collection(\"meetups\");\n\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\n\n  return {\n    fallback: false,\n    paths: meetups.map((meetup) => {\n      return { params: { meetupId: \"meetup._id.toString()\" } };\n    }),\n  };\n}\n\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n\n  console.log(meetupId);\n\n  return {\n    props: {\n      meetupData: {\n        img: \"https://upload.wikimedia.org/wikipedia/commons/thumb/a/a3/Canal_Grande_Chiesa_della_Salute_e_Dogana_dal_ponte_dell_Accademia.jpg/2560px-Canal_Grande_Chiesa_della_Salute_e_Dogana_dal_ponte_dell_Accademia.jpg\",\n        id: meetupId,\n        title: \"A first meetup\",\n        address: \"Some street5, 1213 some city\",\n        description: \"The meetup description\",\n      },\n    },\n  };\n}\n\nexport default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}